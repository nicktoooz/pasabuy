import 'package:flutter/material.dart';

final ThemeData lightTheme = ThemeData(
  brightness: Brightness.light,
  applyElevationOverlayColor: false,
  canvasColor: const Color(0xFFFFF8F6),
  cardColor: const Color(0xFFFFF8F6),
  dialogBackgroundColor: const Color(0xFFFFF8F6),
  disabledColor: const Color(0x61000000),
  dividerColor: const Color(0x1F231917),
  focusColor: const Color(0x1F000000),
  highlightColor: const Color(0x66BCBCBC),
  hintColor: const Color(0x99000000),
  hoverColor: const Color(0x0A000000),
  scaffoldBackgroundColor: const Color(0xFFFFF8F6),
  secondaryHeaderColor: const Color(0xFFE3F2FD),
  shadowColor: const Color(0xFF000000),
  splashColor: const Color(0x66C8C8C8),
  splashFactory: InkRipple.splashFactory,
  unselectedWidgetColor: const Color(0x8A000000),
  useMaterial3: true,
  visualDensity: VisualDensity.compact,
  primaryColor: const Color(0xFF8F4C38),
  primaryColorDark: const Color(0xFF1976D2),
  primaryColorLight: const Color(0xFFBBDEFB),
  primaryIconTheme: const IconThemeData(color: Color(0xFFFFFFFF)),
  iconTheme: const IconThemeData(
    color: Color(0xDD000000),
  ),
  colorScheme: const ColorScheme(
    brightness: Brightness.light,
    error: Color(0xFFBA1A1A),
    errorContainer: Color(0xFFFFDAD6),
    inversePrimary: Color(0xFFFFB5A0),
    inverseSurface: Color(0xFF392E2B),
    onError: Color(0xFFFFFFFF),
    onErrorContainer: Color(0xFF410002),
    onInverseSurface: Color(0xFFFFEDE8),
    onPrimary: Color(0xFFFFFFFF),
    onPrimaryContainer: Color(0xFF3A0B01),
    onSecondary: Color(0xFFFFFFFF),
    onSecondaryContainer: Color(0xFF2C150F),
    onSurface: Color(0xFF231917),
    onSurfaceVariant: Color(0xFF53433F),
    onTertiary: Color(0xFFFFFFFF),
    onTertiaryContainer: Color(0xFF231B00),
    outline: Color(0xFF85736E),
    outlineVariant: Color(0xFFD8C2BC),
    primary: Color(0xFF8F4C38),
    primaryContainer: Color(0xFFFFDBD1),
    scrim: Color(0xFF000000),
    secondary: Color(0xFF77574E),
    secondaryContainer: Color(0xFFFFDBD1),
    shadow: Color(0xFF000000),
    surface: Color(0xFFFFF8F6),
    surfaceTint: Color(0xFF8F4C38),
    tertiary: Color(0xFF6C5D2F),
    tertiaryContainer: Color(0xFFF5E1A7),
  ),
  buttonTheme: ButtonThemeData(
    alignedDropdown: false,
    colorScheme: const ColorScheme.light(
      surface: Color(0xFFFFF8F6),
      primary: Color(0xFF8F4C38),
      secondary: Color(0xFF77574E),
    ),
    height: 36,
    layoutBehavior: ButtonBarLayoutBehavior.padded,
    minWidth: 88,
    padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 0),
    shape: RoundedRectangleBorder(
      borderRadius: BorderRadius.circular(2),
    ),
  ),
  inputDecorationTheme: const InputDecorationTheme(
    alignLabelWithHint: false,
    filled: false,
    floatingLabelBehavior: FloatingLabelBehavior.auto,
    floatingLabelAlignment: FloatingLabelAlignment.start,
    isCollapsed: false,
    isDense: false,
  ),
  textTheme: const TextTheme(
    bodyLarge: TextStyle(
      color: Color(0xFF231917),
      fontFamily: 'SFProDisplay',
      fontSize: 16,
      fontWeight: FontWeight.w400,
    ),
    bodyMedium: TextStyle(
      color: Color(0xFF231917),
      fontFamily: 'SFProDisplay',
      fontSize: 14,
      fontWeight: FontWeight.w400,
    ),
    bodySmall: TextStyle(
      color: Color(0xFF231917),
      fontFamily: 'SFProDisplay',
      fontSize: 12,
      fontWeight: FontWeight.w400,
    ),
    displayLarge: TextStyle(
      color: Color(0xFF231917),
      fontFamily: 'SFProDisplay',
      fontSize: 96,
      fontWeight: FontWeight.w300,
    ),
    headlineLarge: TextStyle(
      color: Color(0xFF231917),
      fontFamily: 'SFProDisplay',
      fontSize: 40,
      fontWeight: FontWeight.w400,
    ),
    labelLarge: TextStyle(
      color: Color(0xFF231917),
      fontFamily: 'SFProDisplay',
      fontSize: 14,
      fontWeight: FontWeight.w500,
    ),
    titleLarge: TextStyle(
      color: Color(0xFF231917),
      fontFamily: 'SFProDisplay',
      fontSize: 20,
      fontWeight: FontWeight.w500,
    ),
  ),
);

final ThemeData darkTheme = ThemeData(
  brightness: Brightness.dark,
  applyElevationOverlayColor: true,
  canvasColor: const Color(0xFF1A110F),
  cardColor: const Color(0xFF1A110F),
  dialogBackgroundColor: const Color(0xFF1A110F),
  disabledColor: const Color(0x62FFFFFF),
  dividerColor: const Color(0x1FF1DFDA),
  focusColor: const Color(0x1FFFFFFF),
  highlightColor: const Color(0x40CCCCCC),
  hintColor: const Color(0x99FFFFFF),
  hoverColor: const Color(0x0AFFFFFF),
  scaffoldBackgroundColor: const Color(0xFF1A110F),
  secondaryHeaderColor: const Color(0xFF616161),
  shadowColor: const Color(0xFF000000),
  splashColor: const Color(0x40CCCCCC),
  splashFactory: InkRipple.splashFactory,
  unselectedWidgetColor: const Color(0xB3FFFFFF),
  useMaterial3: true,
  visualDensity: VisualDensity.compact,
  primaryColor: const Color(0xFF1A110F),
  primaryColorDark: const Color(0xFF000000),
  primaryColorLight: const Color(0xFF9E9E9E),
  primaryIconTheme: const IconThemeData(color: Color(0xFFFFFFFF)),
  iconTheme: const IconThemeData(
    color: Color(0xFFFFFFFF),
  ),
  colorScheme: const ColorScheme(
    brightness: Brightness.dark,
    error: Color(0xFFFFB4AB),
    errorContainer: Color(0xFF93000A),
    inversePrimary: Color(0xFF8F4C38),
    inverseSurface: Color(0xFFF1DFDA),
    onError: Color(0xFF690005),
    onErrorContainer: Color(0xFFFFDAD6),
    onInverseSurface: Color(0xFF392E2B),
    onPrimary: Color(0xFF561F0F),
    onPrimaryContainer: Color(0xFFFFDBD1),
    onSecondary: Color(0xFF442A22),
    onSecondaryContainer: Color(0xFFFFDBD1),
    onSurface: Color(0xFFF1DFDA),
    onSurfaceVariant: Color(0xFFD8C2BC),
    onTertiary: Color(0xFF3B2F05),
    onTertiaryContainer: Color(0xFFF5E1A7),
    outline: Color(0xFFA08C87),
    outlineVariant: Color(0xFF53433F),
    primary: Color(0xFFFFB5A0),
    primaryContainer: Color(0xFF723523),
    scrim: Color(0xFF000000),
    secondary: Color(0xFFE7BDB2),
    secondaryContainer: Color(0xFF5D4037),
    shadow: Color(0xFF000000),
    surface: Color(0xFF1A110F),
    surfaceContainerHighest: Color(0xFF3D322F),
    surfaceTint: Color(0xFFFFB5A0),
    tertiary: Color(0xFFD8C58D),
    tertiaryContainer: Color(0xFF534619),
  ),
  buttonTheme: ButtonThemeData(
    alignedDropdown: false,
    colorScheme: const ColorScheme.dark(
      surface: Color(0xFF1A110F),
      primary: Color(0xFFFFB5A0),
      secondary: Color(0xFFE7BDB2),
    ),
    height: 36,
    layoutBehavior: ButtonBarLayoutBehavior.padded,
    minWidth: 88,
    padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 0),
    shape: RoundedRectangleBorder(
      borderRadius: BorderRadius.circular(2),
    ),
  ),
  inputDecorationTheme: const InputDecorationTheme(
    alignLabelWithHint: false,
    filled: false,
    floatingLabelBehavior: FloatingLabelBehavior.auto,
    floatingLabelAlignment: FloatingLabelAlignment.start,
    isCollapsed: false,
    isDense: false,
  ),
  textTheme: const TextTheme(
    bodyLarge: TextStyle(
      color: Color(0xFFF1DFDA),
      fontFamily: 'SFProDisplay',
      fontSize: 16,
      fontWeight: FontWeight.w400,
    ),
    bodyMedium: TextStyle(
      color: Color(0xFFF1DFDA),
      fontFamily: 'SFProDisplay',
      fontSize: 14,
      fontWeight: FontWeight.w400,
    ),
    bodySmall: TextStyle(
      color: Color(0xFFF1DFDA),
      fontFamily: 'SFProDisplay',
      fontSize: 12,
      fontWeight: FontWeight.w400,
    ),
    displayLarge: TextStyle(
      color: Color(0xFFF1DFDA),
      fontFamily: 'SFProDisplay',
      fontSize: 96,
      fontWeight: FontWeight.w300,
    ),
    displayMedium: TextStyle(
      color: Color(0xFFF1DFDA),
      fontFamily: 'SFProDisplay',
      fontSize: 60,
      fontWeight: FontWeight.w300,
    ),
    displaySmall: TextStyle(
      color: Color(0xFFF1DFDA),
      fontFamily: 'SFProDisplay',
      fontSize: 48,
      fontWeight: FontWeight.w400,
    ),
    headlineLarge: TextStyle(
      color: Color(0xFFF1DFDA),
      fontFamily: 'SFProDisplay',
      fontSize: 40,
      fontWeight: FontWeight.w400,
    ),
    headlineMedium: TextStyle(
      color: Color(0xFFF1DFDA),
      fontFamily: 'SFProDisplay',
      fontSize: 34,
      fontWeight: FontWeight.w400,
    ),
    headlineSmall: TextStyle(
      color: Color(0xFFF1DFDA),
      fontFamily: 'SFProDisplay',
      fontSize: 24,
      fontWeight: FontWeight.w400,
    ),
    labelLarge: TextStyle(
      color: Color(0xFFF1DFDA),
      fontFamily: 'SFProDisplay',
      fontSize: 14,
      fontWeight: FontWeight.w500,
    ),
    labelMedium: TextStyle(
      color: Color(0xFFF1DFDA),
      fontFamily: 'SFProDisplay',
      fontSize: 11,
      fontWeight: FontWeight.w400,
    ),
    labelSmall: TextStyle(
      color: Color(0xFFF1DFDA),
      fontFamily: 'SFProDisplay',
      fontSize: 10,
      fontWeight: FontWeight.w400,
    ),
    titleLarge: TextStyle(
      color: Color(0xFFF1DFDA),
      fontFamily: 'SFProDisplay',
      fontSize: 20,
      fontWeight: FontWeight.w500,
    ),
    titleMedium: TextStyle(
      color: Color(0xFFF1DFDA),
      fontFamily: 'SFProDisplay',
      fontSize: 16,
      fontWeight: FontWeight.w400,
    ),
    titleSmall: TextStyle(
      color: Color(0xFFF1DFDA),
      fontFamily: 'SFProDisplay',
      fontSize: 14,
      fontWeight: FontWeight.w500,
    ),
  ),
);
